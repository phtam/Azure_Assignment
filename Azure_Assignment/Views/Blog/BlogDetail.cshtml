@model Azure_Assignment.EF.BlogComments
@{
    ViewBag.Title = "Index";
    ViewBag.BlogsActive = "active";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var blogCate = (List<Azure_Assignment.ViewModels.BlogCategoriesViewModel>)ViewBag.BlogCategoies;
    var blog = (Azure_Assignment.EF.Blogs)ViewBag.Blog;
    //var comment = (List<Azure_Assignment.ViewModels.BlogCommentViewModel>)ViewBag.Comment
}

<!-- Breadcrumb Begin -->
<div class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__links">
                    <a href="./index.html"><i class="fa fa-home"></i> Home</a>
                    <a href="@Url.Action("Index", "Blog", new { })">Blog categoies</a>
                    @{foreach (var item in ViewBag.BlogAboutName)
                        {
                            <span>Blog: @item.BlogName</span>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Breadcrumb End -->
<!-- Blog Details Section Begin -->
<section class="blog-details spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-8">
                @{foreach (var item in ViewBag.BlogDetail)
                    {
                        <div class="blog__item">
                            <div class="blog__item__pic large__item set-bg" data-setbg="@item.Thumbnail"></div>
                            <div class="blog__details__item__title">
                                @*<span class="tip"><a href="#">Watch now</a></span>*@
                                <h6><strong>@item.BlogName</strong></h6>
                                <ul>
                                    <li>by <span>@item.Username</span></li>
                                    <li>@item.WritingDate</li>
                                </ul>
                            </div>
                        </div>
                        <div class="blog__details__desc">
                            <p>
                                @Html.Raw(item.Content)
                            </p>
                        </div>
                    }
                }
            </div>
            <div class="col-lg-4 col-md-4">
                <div class="blog__sidebar">
                    <div class="blog__sidebar__item">
                        <div class="section-title">
                            <h4>Blog categories</h4>
                        </div>
                        <ul>
                            @{
                                foreach (var item in blogCate)
                                {
                                    <li><a href="@Url.Action("BlogList", "Blog", new { id = item.BlogCategoryID })">@item.BlogCategoryName.ToUpper()</a></li>
                                }

                            }
                        </ul>
                    </div>
                    <div class="blog__sidebar__item">
                        <div class="section-title">
                            <h4>Comment</h4>
                        </div>
                        @using (Html.BeginForm("AddComment", "Blog", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-group">
                                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Your full name" } })
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Your phone" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Your email" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <textarea class="form-control" name="Comment" rows="8" placeholder="Enter your review or question."></textarea>
                                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.CommentingDate)

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.Hidden("BlogID", blog.BlogID)
                                <br />
                                <button type="submit" class="float-right site-btn">Send</button>
                            </div>
                        }
                    </div>

                    <div class="blog__sidebar__item">
                        <div class="section-title">
                            <h4>Blog comments</h4>
                        </div>
                        @foreach (var item in ViewBag.Comment)
                        {
                            string[] tu = item.FullName.Split(' ');
                            int len = tu.Length;
                            string word = tu[len - 1];
                            string character = word.Substring(0, 1);
                            <span class="avatar">@character</span>
                            @*<b>@item.FullName </b><span>- @item.CommentingDate</span>*@

                            DateTime ngaymuon = Convert.ToDateTime(item.CommentingDate);
                            DateTime ngaytra = Convert.ToDateTime(DateTime.Now);
                            TimeSpan Time = ngaytra - ngaymuon;
                            int TongSoNgay = Time.Days;
                            int TongSoGio = Time.Hours;
                            int TongSoPhut = Time.Minutes;
                            if (TongSoNgay < 1)
                            {
                                if (TongSoGio < 1)
                                {
                                    <b>@item.FullName </b><small style="color: darkgrey">- @TongSoPhut minute(s) before</small>
                                }
                                else
                                {
                                    <b>@item.FullName </b><small style="color: darkgrey">- @TongSoGio hour(s) before</small>
                                }
                            }
                            else
                            {
                                <b>@item.FullName </b><small style="color: darkgrey">- @TongSoNgay day(s) before</small>
                            };
                            <div>@item.Comment</div>
                            <br />
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@section ClientScript{


}
@{
    if (TempData["Notice_Submit_Success"] != null)
    {
        <script>
            Swal.fire({
                position: 'center',
                icon: 'success',
                title: 'Submitted successfully!',
                showConfirmButton: false,
                timer: 20000
            });
        </script>
        }
    }

<style>
    .avatar {
        float: left;
        width: 25px;
        height: 25px;
        background: #ddd;
        margin-right: 7px;
        text-align: center;
        color: #666;
        text-transform: uppercase;
        font-size: 12px;
        line-height: 26px;
        font-weight: 600;
        text-shadow: 1px 1px 0 rgba(255,255,255,.2)
    }
</style>